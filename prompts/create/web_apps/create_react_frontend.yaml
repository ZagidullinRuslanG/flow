title: "Создание React фронтенда"
category: "create"
subcategory: "web_apps"
difficulty: "intermediate"
description: |
  Этот промпт помогает создать современный React фронтенд с использованием
  лучших практик, включая TypeScript, компонентный подход, управление состоянием,
  маршрутизацию и интеграцию с бэкендом.

example: |
  Пожалуйста, создайте React фронтенд со следующими требованиями:

  1. Структура проекта:
     - Использование Create React App или Vite
     - TypeScript для типизации
     - Структура папок (components, pages, hooks, utils, services, etc.)
     - Настройка ESLint и Prettier
     - Конфигурация сборки
  
  2. Основные технологии:
     - React 18+
     - TypeScript
     - React Router для маршрутизации
     - Redux Toolkit или React Query для управления состоянием
     - Axios для HTTP-запросов
     - Material-UI или Tailwind CSS для стилизации
  
  3. Компоненты:
     - Переиспользуемые UI-компоненты
     - Компоненты страниц
     - Layout компоненты
     - Модальные окна
     - Формы с валидацией
     - Таблицы и списки
  
  4. Функциональность:
     - Аутентификация и авторизация
     - Маршрутизация с защищенными маршрутами
     - Управление состоянием приложения
     - Обработка ошибок
     - Загрузка данных
     - Кэширование
     - Оптимизация производительности
  
  5. Стилизация:
     - CSS-in-JS или CSS модули
     - Адаптивный дизайн
     - Темная/светлая тема
     - Анимации
     - Доступность (a11y)
  
  6. Тестирование:
     - Jest для модульных тестов
     - React Testing Library
     - Cypress для E2E тестов
     - Настройка CI/CD
  
  7. Дополнительно:
     - Интернационализация (i18n)
     - PWA возможности
     - Оптимизация для SEO
     - Аналитика
     - Мониторинг ошибок

expected_outcome: |
  Ассистент создаст:
  1. Базовую структуру React-приложения
  2. Настройку всех необходимых зависимостей
  3. Базовые компоненты и страницы
  4. Настройку маршрутизации
  5. Интеграцию с бэкендом
  6. Настройку стилей и тем
  7. Базовые тесты
  8. Документацию по развертыванию

notes: |
  При создании React фронтенда следует учитывать:
  - Использовать функциональные компоненты и хуки
  - Следовать принципам атомарного дизайна
  - Применять паттерны оптимизации (memo, useMemo, useCallback)
  - Использовать TypeScript для типизации
  - Следовать принципам чистого кода
  - Обеспечить доступность компонентов
  - Оптимизировать бандл
  - Использовать современные практики React
  - Обеспечить поддержку различных браузеров
  - Добавить документацию компонентов
  - Настроить линтеры и форматтеры
  - Использовать семантическую верстку
  - Обеспечить отзывчивый дизайн
  - Добавить обработку ошибок
  - Реализовать кэширование данных
  - Настроить мониторинг производительности 